version: 2.1

description: |
  ShellCheck, a static analysis tool for shell scripts
  https://shellcheck.net Check all scripts in your repository using
  `shellcheck` on every commit. This orb's source is available here:
  https://github.com/CircleCI-Public/shellcheck-orb

executors:
  shellcheck:
    description: |
      This is a docker image that contains the `shellcheck` binary.
    docker:
      - image: koalaman/shellcheck-alpine:v0.7.0

examples:
  shellcheck-workflow:
    description: |
      Checkout and run shellcheck against all files with the extension .sh

    usage:
      version: 2.1

      orbs:
        shellcheck: circleci/shellcheck@x.y.z

      workflows:
        shellcheck:
          jobs:
            - shellcheck/check

  exclude-path:
    description: |
      Exclude subdirectory 'foo' and its contents

    usage:
      version: 2.1

      orbs:
        shellcheck: circleci/shellcheck@x.y.z

      workflows:
        shellcheck:
          jobs:
            - shellcheck/check:
                exclude: './foo/*'

  custom-executor:
    description: |
      Use custom executor

    usage:
      version: 2.1

      orbs:
        shellcheck: circleci/shellcheck@x.y.z

      executors:
        my-custom-executor:
          docker:
            - image: nlknguyen/alpine-shellcheck:v0.4.6

      workflows:
        shellcheck:
          jobs:
            - shellcheck/check:
                executor: my-custom-executor

jobs:
  check:
    description: |
      Run shellcheck over any shell scripts in the respository.
      Add this job to any workflow to automatically check any shell scripts
      in your repository.
    executor: << parameters.executor >>
    parameters:
      exclude:
        type: string
        default: ""
        description: |
          This file pattern (as passed to `find -not -path`) is used to select
          a path to exclude when searching for files. Currently, this is
          limited to a single pattern.
      ignore:
        type: string
        default: ""
        description: >
          Comma-separated string list of error types to ignore, e.g.,
          `SC2059,SC2034,SC1090`
      path:
        type: string
        default: .
        description: The top-most directory to search for files in.
      pattern:
        type: string
        default: "*.sh"
        description: |
          The file pattern as passed to `find` to locate shell scripts.
      output:
        type: string
        default: shellcheck.log
        description: |
          The filename of the shellcheck output, which is automatically saved
          as a job artifact.
      executor:
        type: executor
        default: shellcheck
        description: |
          Override executor with a custom executor, for example, to choose a
          different version tag.
    steps:
      - checkout
      - run:
          name: Check Scripts
          command: |
            <<#parameters.ignore>>
            IGNORE_STRING=<<parameters.ignore>>
            SHELLCHECK_OPTS=$(echo "-e ${IGNORE_STRING//,/ -e }")

            export SHELLCHECK_OPTS="$SHELLCHECK_OPTS"

            echo "Running shellcheck with the following SHELLCHECK_OPTS value..."
            echo "SHELLCHECK_OPTS=$SHELLCHECK_OPTS"
            <</parameters.ignore>>

            find '<<parameters.path>>' -not -path '<<parameters.exclude>>' \
              -type f -name '<<parameters.pattern>>' | \
              xargs shellcheck --external-sources | \
              tee -a '<<parameters.output>>'
      - store_artifacts:
          path: '<< parameters.output >>'
          destination: shellcheck
